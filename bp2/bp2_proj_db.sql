-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-01-16 11:13:26 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE attendee (
    atd_id           INTEGER NOT NULL,
    atd_email        VARCHAR2(255 CHAR),
    atd_name         VARCHAR2(255 CHAR) NOT NULL,
    atd_last_name    VARCHAR2(255 CHAR) NOT NULL,
    atd_phone_number VARCHAR2(100 CHAR)
);

ALTER TABLE attendee ADD CONSTRAINT attendee_pk PRIMARY KEY ( atd_id );

CREATE TABLE discount (
    dsc_id         INTEGER NOT NULL,
    dsc_type       VARCHAR2(255 CHAR) NOT NULL,
    dsc_validity   CHAR(1),
    dsc_percentage FLOAT NOT NULL
);

ALTER TABLE discount ADD CONSTRAINT discount_pk PRIMARY KEY ( dsc_id );

CREATE TABLE event (
    evt_id         INTEGER NOT NULL,
    evt_name       VARCHAR2(255 CHAR) NOT NULL,
    evt_start_date DATE NOT NULL,
    evt_end_date   DATE NOT NULL,
    evt_location   VARCHAR2(255 CHAR),
    event_evt_id   INTEGER
);

ALTER TABLE event ADD CONSTRAINT event_pk PRIMARY KEY ( evt_id );

CREATE TABLE gaplusticket (
    tty_id          INTEGER NOT NULL,
    discount_dsc_id INTEGER NOT NULL
);

ALTER TABLE gaplusticket ADD CONSTRAINT gaplusticket_pk PRIMARY KEY ( tty_id );

CREATE TABLE performer (
    per_id            INTEGER NOT NULL,
    per_name          VARCHAR2(255 CHAR) NOT NULL,
    per_last_name     VARCHAR2(255 CHAR) NOT NULL,
    per_artist_name   VARCHAR2(255 CHAR) NOT NULL,
    per_music_type    VARCHAR2(255 CHAR),
    per_manager_email VARCHAR2(255 CHAR)
);

ALTER TABLE performer ADD CONSTRAINT performer_pk PRIMARY KEY ( per_id );

CREATE TABLE performs (
    stage_stg_id       INTEGER NOT NULL,
    stage_event_evt_id INTEGER NOT NULL,
    performer_per_id   INTEGER NOT NULL,
    prf_date           DATE NOT NULL,
    prf_start_time     DATE NOT NULL,
    prf_end_time       DATE NOT NULL
);

ALTER TABLE performs
    ADD CONSTRAINT performs_pk PRIMARY KEY ( stage_stg_id,
                                             stage_event_evt_id,
                                             performer_per_id );

CREATE TABLE purchase (
    pch_id          INTEGER NOT NULL,
    pch_date        DATE NOT NULL,
    ticket_tck_id   INTEGER NOT NULL,
    attendee_atd_id INTEGER NOT NULL,
    event_evt_id    INTEGER NOT NULL
);

ALTER TABLE purchase
    ADD CONSTRAINT purchase_pk PRIMARY KEY ( pch_id,
                                             ticket_tck_id,
                                             attendee_atd_id );

CREATE TABLE stage (
    stg_id       INTEGER NOT NULL,
    stg_name     VARCHAR2(255 CHAR) NOT NULL,
    stg_capacity INTEGER,
    stg_location VARCHAR2(255 CHAR),
    event_evt_id INTEGER NOT NULL
);

ALTER TABLE stage ADD CONSTRAINT stage_pk PRIMARY KEY ( stg_id,
                                                        event_evt_id );

CREATE TABLE ticket (
    tck_id            INTEGER NOT NULL,
    tck_price         FLOAT,
    tickettype_tty_id INTEGER NOT NULL
);

ALTER TABLE ticket ADD CONSTRAINT ticket_pk PRIMARY KEY ( tck_id );

CREATE TABLE tickettype (
    tty_id          INTEGER NOT NULL,
    tty_type        VARCHAR2(50 CHAR) NOT NULL,
    tty_quantity    INTEGER,
    event_evt_id    INTEGER NOT NULL,
    tickettype_type VARCHAR2(12) NOT NULL
);

ALTER TABLE tickettype
    ADD CONSTRAINT ch_inh_tickettype CHECK ( tickettype_type IN ( 'GAPlusTicket', 'TicketType', 'VIPTicket' ) );

ALTER TABLE tickettype ADD CONSTRAINT tickettype_pk PRIMARY KEY ( tty_id );

CREATE TABLE viparea (
    vip_id       INTEGER NOT NULL,
    vip_name     VARCHAR2(255 CHAR) NOT NULL,
    vip_capacity INTEGER
);

ALTER TABLE viparea ADD CONSTRAINT viparea_pk PRIMARY KEY ( vip_id );

CREATE TABLE vipticket (
    tty_id         INTEGER NOT NULL,
    viparea_vip_id INTEGER NOT NULL
);

ALTER TABLE vipticket ADD CONSTRAINT vipticket_pk PRIMARY KEY ( tty_id );

ALTER TABLE event
    ADD CONSTRAINT event_event_fk FOREIGN KEY ( event_evt_id )
        REFERENCES event ( evt_id );

ALTER TABLE gaplusticket
    ADD CONSTRAINT gaplusticket_discount_fk FOREIGN KEY ( discount_dsc_id )
        REFERENCES discount ( dsc_id );

ALTER TABLE gaplusticket
    ADD CONSTRAINT gaplusticket_tickettype_fk FOREIGN KEY ( tty_id )
        REFERENCES tickettype ( tty_id );

ALTER TABLE performs
    ADD CONSTRAINT performs_performer_fk FOREIGN KEY ( performer_per_id )
        REFERENCES performer ( per_id );

ALTER TABLE performs
    ADD CONSTRAINT performs_stage_fk FOREIGN KEY ( stage_stg_id,
                                                   stage_event_evt_id )
        REFERENCES stage ( stg_id,
                           event_evt_id );

ALTER TABLE purchase
    ADD CONSTRAINT purchase_attendee_fk FOREIGN KEY ( attendee_atd_id )
        REFERENCES attendee ( atd_id );

ALTER TABLE purchase
    ADD CONSTRAINT purchase_event_fk FOREIGN KEY ( event_evt_id )
        REFERENCES event ( evt_id );

ALTER TABLE purchase
    ADD CONSTRAINT purchase_ticket_fk FOREIGN KEY ( ticket_tck_id )
        REFERENCES ticket ( tck_id );

ALTER TABLE stage
    ADD CONSTRAINT stage_event_fk FOREIGN KEY ( event_evt_id )
        REFERENCES event ( evt_id );

ALTER TABLE ticket
    ADD CONSTRAINT ticket_tickettype_fk FOREIGN KEY ( tickettype_tty_id )
        REFERENCES tickettype ( tty_id );

ALTER TABLE tickettype
    ADD CONSTRAINT tickettype_event_fk FOREIGN KEY ( event_evt_id )
        REFERENCES event ( evt_id );

ALTER TABLE vipticket
    ADD CONSTRAINT vipticket_tickettype_fk FOREIGN KEY ( tty_id )
        REFERENCES tickettype ( tty_id );

ALTER TABLE vipticket
    ADD CONSTRAINT vipticket_viparea_fk FOREIGN KEY ( viparea_vip_id )
        REFERENCES viparea ( vip_id );

CREATE OR REPLACE TRIGGER arc_fkarc_1_vipticket BEFORE
    INSERT OR UPDATE OF tty_id ON vipticket
    FOR EACH ROW
DECLARE
    d VARCHAR2(12);
BEGIN
    SELECT
        a.tickettype_type
    INTO d
    FROM
        tickettype a
    WHERE
        a.tty_id = :new.tty_id;

    IF ( d IS NULL OR d <> 'VIPTicket' ) THEN
        raise_application_error(-20223, 'FK VIPTicket_TicketType_FK in Table VIPTicket violates Arc constraint on Table TicketType - discriminator column TicketType_TYPE doesn''t have value ''VIPTicket'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_gaplusticket BEFORE
    INSERT OR UPDATE OF tty_id ON gaplusticket
    FOR EACH ROW
DECLARE
    d VARCHAR2(12);
BEGIN
    SELECT
        a.tickettype_type
    INTO d
    FROM
        tickettype a
    WHERE
        a.tty_id = :new.tty_id;

    IF ( d IS NULL OR d <> 'GAPlusTicket' ) THEN
        raise_application_error(-20223, 'FK GAPlusTicket_TicketType_FK in Table GAPlusTicket violates Arc constraint on Table TicketType - discriminator column TicketType_TYPE doesn''t have value ''GAPlusTicket'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/
